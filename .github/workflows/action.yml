name: Auto Tag on Commit

on:
  push:
    branches:
      - main      

jobs:
  build_generate_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.BOT_TOKEN }}
      - name: Generate Git Tag
        id: generate_tag
        run: |
          # Find the latest tag if available
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "")
          echo "Old tag: $LATEST_TAG"

          #Find Latest Tag
          if [ -z "$LATEST_TAG" ]; then

            # If no tags found, start with initial version
            NEW_TAG="v0.0.0"
          else
            # Extract the version number and branch name from the latest tag
            VERSION_BRANCH=$(echo "$LATEST_TAG" | cut -d'_' -f1)
            VERSION=$(echo "$VERSION_BRANCH" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
            BRANCH_NAME=$(echo "$LATEST_TAG" | cut -d'_' -f2)

            #Find the commit message and change it to uppercase
            COMMIT_MESSAGE=$(echo "${{ github.event.head_commit.message }}" | tr '[:lower:]' '[:upper:]')

            # Increment the version number according to message
            if [[ "$COMMIT_MESSAGE" == *MAJORRELEASE* ]]; then
              NEW_VERSION=$(echo "$VERSION" | awk -F'.' '{print $1 +1 "." $2 ".0"}')
            elif [[ "$COMMIT_MESSAGE" == *MINORRELEASE* ]]; then  
              NEW_VERSION=$(echo "$VERSION" | awk -F'.' '{print $1 "." $2 + 1 ".0"}')
            else
              NEW_VERSION=$(echo "$VERSION" | awk -F'.' '{print $1 "." $2 "." $3 + 1}')  
            fi 

            # Construct the new tag
            NEW_TAG="v${NEW_VERSION}"
          fi

          echo "Generated new tag: $NEW_TAG"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
      - name: Push Git Tag   
        run: |
          git config user.name "Abisheck26"
          git config user.email "abisheckgnanavel@gmail.com"
          git tag $NEW_TAG
          git push origin --tags >/dev/null 2>&1
      
        
